{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Official JSON schema for the Timber.io logging and APM platform (https://github.com/timberio/log-event-json-schema)",
  "type": "object",
  "required": ["dt", "message"],
  "additionalProperties": false,
  "properties": {
    "dt": {
      "type": "string",
      "format": "date-time",
      "description": "The local IOS8601 formatted datetime when this event occured."
    },
    "level": {
      "type": "string",
      "enum": ["debug", "info", "notice", "warn", "error", "critical", "alert", "emergency"],
      "description": "The descriptive level in string format. This property adheres to the Syslog 5424 specification for level."
    },
    "severity": {
      "type": "integer",
      "minimum": 0,
      "maximum": 7,
      "description": "Numerical severity represented by an integer between 0 and 7. This propery adheres to the Syslog 5424 specification for severity."
    },
    "message": {
      "type": "string",
      "description": "The raw log event message, formatting stripped.",
      "maxLength": 8192
    },
    "context": {
      "type": "object",
      "description": "Shared metadata representing the context this event was generated in. This data generally spans multiple events and is used to relate multiple events.",
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "aws_ec2": {"$ref": "contexts/aws_ec2.json"},
        "custom": {"$ref": "contexts/custom.json#" },
        "file": {"$ref": "contexts/file.json"},
        "heroku": {"$ref": "contexts/heroku.json"},
        "http": {"$ref": "contexts/custom.json#"},
        "job": {"$ref": "contexts/job.json#"},
        "kubernetes": {"$ref": "contexts/kubernetes.json"},
        "organization": {"$ref": "contexts/organization.json#"},
        "release": {"$ref": "contexts/release.json"},
        "runtime": {"$ref": "contexts/runtime.json"},
        "session": {"$ref": "contexts/session.json"},
        "system": {"$ref": "contexts/system.json#"},
        "user": {"$ref": "contexts/user.json#"}
    },
    "event": {
      "type": "object",
      "description": "A controlled representation of the event this log line represents.",
      "maxProperties": 1,
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "channel_join": {"#ref": "events/channel_join.json#"},
        "channel_receive": {"#ref": "events/channel_receive.json#"},
        "controller_call": {"#ref": "events/controller_call.json#" },
        "custom": {"#ref": "events/custom.json#"},
        "error": {"#ref": "events/error.json#"},
        "incoming_http_request": {"#ref": "events/incoming_http_request.json"},
        "incoming_http_request_response": {"#ref": "events/incoming_http_request_response.json"},
        "outgoing_http_request": {"#ref": "events/outgoing_http_request.json"},
        "outgoing_http_request_response": {"#ref": "events/outgoing_http_request_response.json"},
        "resource_sample": {"#ref": "events/resource_sample.json"},
        "sql_query": {"#ref": "events/sql_query.json"},
        "template_render": {
          "type": "object",
          "description": "Rendering a template to be sent to the client via the HTTP response.",
          "required": ["name", "time_ms"],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the template. This generally includes the path.",
              "minLength": 1,
              "maxLength": 1024
            },
            "time_ms": {
              "$ref": "#/definitions/time_ms"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "http_body": {
      "type": "string",
      "description": "The body of the HTTP request / response.",
      "minLength": 1,
      "maxLength": 8192
    },
    "http_content_length": {
      "type": "integer",
      "description": "The value of the Content-Length header representing the size of the request in decimal number of octets.",
      "minimum": 0
    },
    "http_direction": {
      "type": "string",
      "description": "The direction of the HTTP request and response (incoming or outgoing).",
      "enum": ["incoming", "outgoing"]
    },
    "http_headers": {
      "type": "object",
      "description": "An object representing *select* HTTP headers that need to be searched or graphed.",
      "minProperties": 1
    },
    "http_headers_json": {
      "type": "string",
      "description": "An encoded JSON string representing *all* HTTP headers. This is used for request inspection without the overhead of creating and indexing fields for every header.",
      "maxLEngth": 8192
    },
    "http_host": {
      "type": "string",
      "description": "The target host of the HTTP request. This may not be the same as the real hostname of the server.",
      "minLength": 1,
      "maxLength": 256
    },
    "http_method": {
      "type": "string",
      "description": "The HTTP method for the request.",
      "enum": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"]
    },
    "http_path": {
      "type": "string",
      "description": "The path of the HTTP request.",
      "minLength": 1,
      "maxLength": 2048
    },
    "http_port": {
      "type": "integer",
      "description": "The target port of the HTTP request. This may be different than the port the server is listening on.",
      "minimum": 0
    },
    "http_query_string": {
      "type": "string",
      "description": "The query parameters present on the URL.",
      "minLength": 1,
      "maxLength": 4096
    },
    "http_remote_addr": {
      "type": "string",
      "description": "The IP address of the computer that issued the request.",
      "minLength": 1,
      "maxLength": 256
    },
    "http_request_id": {
      "type": "string",
      "description": "An ID that uniquely identifies the request and can be used to trace requests.",
      "minLength": 1,
      "maxLength": 256
    },
    "http_scheme": {
      "type": "string",
      "enum": ["http", "https"],
      "description": "The HTTP request scheme."
    },
    "http_service_name": {
      "type": "string",
      "description": "A short label / name for the service you are sending the request to, ex: elasticsearch",
      "minLength": 1,
      "maxLength": 256
    },
    "http_status": {
      "type": "integer",
      "description": "The status as defined by the HTTP status codes."
    },
    "time_ms": {
      "type": "number",
      "minimum": 0,
      "description": "The duration, in fractional milliseconds, that it took to complete this event."
    }
  }
}
