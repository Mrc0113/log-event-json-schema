
{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Timber.io Log Event Schema",
  "type": "object",
  "required": ["$schema", "id", "dt", "message"],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "The URL for the Timber log line JSON schema that the current document adheres to."
    },
    "id": {
      "type": "string",
      "description": "The unique identifer for this log line. This identifier is created and assigned by Timber."
    },
    "dt": {
      "type": "string",
      "format": "date-time",
      "description": "The date and time at which the log event was generated as a string of the form YYYY-MM-DDTHH:MM:SS.SSSSSSZ"
    },
    "message": {
      "type": "string",
      "description": "The log event message"
    },
    "level": {
      "type": "string",
      "description": "The level of the log event message. Typically this is one of debug, error, info, warn, fatal."
    },
    "context": {
      "type": "object",
      "description": "Contextual metadata about the environment the event takes place in",
      "properties": {
        "http": {
          "type": "object",
          "description": "Context about the HTTP request currently being processed (if any)",
          "parameters": {
            "method": {
              "enum": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "POST"," PUT", "TRACE"],
              "description": "The method, such as GET, POST, PUT, etc, for the HTTP request"
            },
            "path": {
              "type": "string",
              "description": "The path for the HTTP request"
            },
            "remote_addr": {
              "type": "string",
              "format": "ipv6",
              "description": "The remote IP address who issued the HTTP request"
            },
            "request_id": {
              "$ref": "#/definitions/request_id"
            }
          }
        },
        "organization": {
          "type": "object",
          "description": "Represents an organization in the platform being logged. The interpretation of \"organization\" is left to the consumer.",
          "parameters": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the organization"
            },
            "name": {
              "type": "string",
              "description": "A display name for the organization"
            }
          }
        },
        "platform": {
          "type": "object",
          "description": "Contextual information about the hosting platform (AWS, Google Cloud, Heroku, etc) the application is hosted.",
          "properties": {
            "heroku": {
              "type": "object",
              "description": "Contextual information for the Heroku platform.",
              "properties": {
                "dyno_type": {
                  "type": "string",
                  "description": "The dyno type for the process (web, worker, router, etc)"
                },
                "dyno_id": {
                  "type": "integer",
                  "description": "The dyno ID for the process."
                },
                "source": {
                  "description": "The source of the log message. For example, Heroku can send log messages for the web.1 dyno from both within the app and Heroku itself.",
                  "enum": ["app", "heroku"]
                }
              }
            }
          }
        },
        "process": {
          "type": "object",
          "description": "Operating system process details.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The current operating system process ID as defined by the `pid` command in Unix."
            }
          }
        },
        "runtime": {
          "type": "object",
          "description": "Represents the language runtime details.",
          "properties": {
            "application": {
              "type": "string",
              "description": "The current application name"
            },
            "class": {
              "type": "string",
              "description": "The current class name, if applicable."
            },
            "file": {
              "type": "string",
              "description": "The current file path from the root of the project."
            },
            "function": {
              "type": "string",
              "description": "The current function name, if applicable."
            },
            "line": {
              "type": "integer",
              "description": "The current line number with in the file."
            },
            "module": {
              "type": "string",
              "description": "The current module name, if applicable."
            },
            "vm_pid": {
              "type": "string",
              "description": "The logical process ID as defined by the current language, if applicable."
            }
          }
        },
        "server": {
          "type": "object",
          "description": "Metadata about the server environment.",
          "properties": {
            "hostname": {
              "type": "string",
              "description": "The server hostname."
            }
          }
        },
        "user": {
          "type": "object",
          "description": "Represents a user in the platform being logged. The interpretation of \"user\" is left to the consumer.",
          "parameters": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the user."
            },
            "name": {
              "type": "string",
              "description": "A display name for the user."
            },
            "email": {
              "type": "string",
              "description": "An email address for the user. This need not be unique to the user. Note that no validation is performed on this field."
            }
          }
        }
      }
    },
    "event": {
      "type": "object",
      "description": "A controlled representation of the event this log line represents.",
      "maxProperties": 1,
      "minProperties": 1,
      "properties": {
        "server_side_app": {
          "type": "object",
          "description": "Namespace for all server side application events.",
          "minProperties": 1,
          "maxProperties": 1,
          "properties": {
            "controller_call": {
              "type": "object",
              "description": "Represents the calling of a controller, typically logged immediately after the request is routed.",
              "properties": {

              }
            },
            "exception": {
              "type": "object",
              "required": ["backtrace", "name", "message"],
              "properties": {
                "backtrace": {
                  "type": "array",
                  "maxItems": 10,
                  "items": {
                    "type": "object",
                    "properties": {
                      "file": {
                        "type": "string",
                        "description": "The line file path."
                      },
                      "function": {
                        "type": "string",
                        "description": "The calling function name."
                      },
                      "line": {
                        "type": "integer",
                        "description": "The calling line number."
                      }
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "The message describing the exception."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the exception."
                }
              }
            },
            "http_client_request": {
              "type": "object",
              "description": "Represents an outbound HTTP request from the application.",
              "required": ["method", "path", "port", "host", "scheme", "status", "time_ms"],
              "properties": {
                "method": {
                  "$ref": "#/definitions/http_method"
                },
                "path": {
                  "$ref": "#/definitions/http_path"
                },
                "port": {
                  "$ref": "#/definitions/http_port"
                },
                "host": {
                  "$ref": "#/definitions/http_host"
                },
                "scheme": {
                  "$ref": "#/definitions/http_scheme"
                },
                "status": {
                  "$ref": "#/definitions/http_status"
                },
                "time_ms": {
                  "$ref": "#/definitions/time_ms"
                }
              }
            },
            "http_server_request": {
              "type": "object",
              "description": "Represents the *reception* of an inbound HTTP request that is being handled by the application.",
              "required": ["method", "path", "port", "host", "scheme"],
              "properties": {
                "method": {
                  "$ref": "#/definitions/http_method"
                },
                "path": {
                  "$ref": "#/definitions/http_path"
                },
                "port": {
                  "$ref": "#/definitions/http_port"
                },
                "host": {
                  "$ref": "#/definitions/http_host"
                },
                "scheme": {
                  "$ref": "#/definitions/http_scheme"
                },
                "headers": {
                  "type": "object",
                  "description": "A select group of headers that was sent with the request.",
                  "minProperties": 1,
                  "properties": {
                    "content_type": {
                      "type": "string",
                      "description": "The Content-Type header value"
                    },
                    "remote_addr": {
                      "type": "string",
                      "format": "ipv6",
                      "description": "The value of the various headers used to determine the requestor's IP address."
                    },
                    "referrer": {
                      "type": "string",
                      "description": "The referring URL that resulted in this request."
                    },
                    "request_id": {
                      "$ref": "#/definitions/request_id"
                    },
                    "user-agent": {
                      "type": "string",
                      "description": "The client / browser / device the requestor is using to make the request."
                    }
                  }
                },
                "query_params": {
                  "$ref": "#/definitions/http_query_params"
                }
              }
            },
            "http_server_response": {
              "type": "object",
              "description": "Represents the *reception* of an inbound HTTP request that is being handled by the application.",
              "required": ["status", "time_ms"],
              "properties": {
                "bytes": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "The size of the response in bytes."
                },
                "status": {
                  "$ref": "#/definitions/http_status"
                },
                "time_ms": {
                  "$ref": "#/definitions/time_ms"
                }
              }
            },
            "sql_query": {
              "type": "object",
              "description": "An outgoing SQL query sent from the application.",
              "required": ["sql", "time_ms"],
              "properties": {
                "sql": {
                  "type": "string",
                  "description": "The actual SQL statement sent."
                },
                "time_ms": {
                  "$ref": "#/definitions/time_ms"
                }
              }
            },
            "template_render": {
              "type": "object",
              "description": "Rendering a template to be sent to the client via the HTTP response.",
              "required": ["sql", "time_ms"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The unique name of the template. This generally includes the path."
                },
                "time_ms": {
                  "$ref": "#/definitions/time_ms"
                }
              }
            }
          }
        },
        "web_server": {
          "type": "object",
          "minProperties": 1,
          "maxProperties": 1,
          "routing": {
            "type": "object",
            "description": "Represents the routing of an incoming HTTP request where a web server acts as a reverse proxy.",
            "required": ["bytes", "connect_ms", "host", "method", "path", "request_id", "service_ms", "status"],
            "properties": {
              "bytes": {
                "type": "integer",
                "description": "The size of the response, in bytes, sent back to the requestor."
              },
              "connect_ms": {
                "type": "number",
                "description": "The time, in fractional milliseconds, it took to connect to the down stream service for processing."
              },
              "fwd": {
                "type": "string",
                "pattern": "ipv6",
                "description": "The IP address of the original requestor."
              },
              "host": {
                "$ref": "#/definitions/http_host"
              },
              "method": {
                "$ref": "#/definitions/http_method"
              },
              "path": {
                "$ref": "#/definitions/http_path"
              },
              "request_id": {
                "$ref": "#/definitions/request_id"
              },
              "service_ms": {
                "type": "number",
                "description": "The time, in fractional milliseconds, it took for the downstream service to process and respond to the request."
              },
              "status": {
                "$ref": "#/definitions/http_status"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "http_host": {
      "type": "string",
      "description": "The target host of the HTTP request. This may not be the same as the real hostname of the server."
    },
    "http_method": {
      "type": "string",
      "description": "The HTTP method for the request.",
      "enum": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "POST"," PUT", "TRACE"]
    },
    "http_path": {
      "type": "string",
      "description": "The path of the HTTP request."
    },
    "http_port": {
      "type": "integer",
      "description": "The target port of the HTTP request. This may be different than the port the server is listening on."
    },
    "http_query_params": {
      "type": "object",
      "description": "The query parameters present on the URL"
    },
    "http_scheme": {
      "type": "string",
      "enum": ["http", "https"],
      "description": "The HTTP request scheme."
    },
    "http_status": {
      "type": "integer",
      "minimum": 100,
      "maximum": 599,
      "description": "The status as defined by the HTTP status codes."
    },
    "request_id": {
      "type": "string",
      "description": "A unique identifier for the HTTP request, typically used to trace this request across services."
    },
    "time_ms": {
      "type": "number",
      "minimum": 0,
      "description": "The duration, in fractional milliseconds, that it took to complete this event."
    }
  }
}
